[
  {
    "inputs": [
      { "internalType": "address", "name": "ownerAddress", "type": "address" },
      {
        "internalType": "address",
        "name": "memswapERC20Address",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "memswapERC721Address",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  { "inputs": [], "name": "NotSupported", "type": "error" },
  { "inputs": [], "name": "Unauthorized", "type": "error" },
  { "inputs": [], "name": "UnsuccessfulCall", "type": "error" },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC20.Intent",
        "name": "intent",
        "type": "tuple"
      },
      { "internalType": "uint128", "name": "amountToFill", "type": "uint128" },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "name": "callback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "bool", "name": "isCriteriaOrder", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "tokenIdOrCriteria",
            "type": "uint256"
          },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC721.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
          {
            "internalType": "bytes32[]",
            "name": "criteriaProof",
            "type": "bytes32[]"
          }
        ],
        "internalType": "struct MemswapERC721.TokenDetails[]",
        "name": "",
        "type": "tuple[]"
      },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "name": "callback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "memswapERC20",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "memswapERC721",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "refund",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC20.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint128", "name": "fillAmount", "type": "uint128" }
        ],
        "internalType": "struct MemswapERC20.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveERC20",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "bool", "name": "isCriteriaOrder", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "tokenIdOrCriteria",
            "type": "uint256"
          },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC721.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes32[]",
                "name": "criteriaProof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct MemswapERC721.TokenDetails[]",
            "name": "fillTokenDetails",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct MemswapERC721.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveERC721",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC20.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint128", "name": "fillAmount", "type": "uint128" }
        ],
        "internalType": "struct MemswapERC20.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveWithOnChainAuthorizationCheckERC20",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "bool", "name": "isCriteriaOrder", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "tokenIdOrCriteria",
            "type": "uint256"
          },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC721.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes32[]",
                "name": "criteriaProof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct MemswapERC721.TokenDetails[]",
            "name": "fillTokenDetails",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct MemswapERC721.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveWithOnChainAuthorizationCheckERC721",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC20.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint128", "name": "fillAmount", "type": "uint128" }
        ],
        "internalType": "struct MemswapERC20.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "fillAmountToCheck",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "executeAmountToCheck",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "blockDeadline",
            "type": "uint32"
          }
        ],
        "internalType": "struct MemswapERC20.Authorization",
        "name": "auth",
        "type": "tuple"
      },
      { "internalType": "bytes", "name": "authSignature", "type": "bytes" },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveWithSignatureAuthorizationCheckERC20",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bool", "name": "isBuy", "type": "bool" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "maker", "type": "address" },
          { "internalType": "address", "name": "solver", "type": "address" },
          { "internalType": "address", "name": "source", "type": "address" },
          { "internalType": "uint16", "name": "feeBps", "type": "uint16" },
          { "internalType": "uint16", "name": "surplusBps", "type": "uint16" },
          { "internalType": "uint32", "name": "startTime", "type": "uint32" },
          { "internalType": "uint32", "name": "endTime", "type": "uint32" },
          {
            "internalType": "bool",
            "name": "isPartiallyFillable",
            "type": "bool"
          },
          { "internalType": "bool", "name": "isSmartOrder", "type": "bool" },
          { "internalType": "bool", "name": "isIncentivized", "type": "bool" },
          { "internalType": "bool", "name": "isCriteriaOrder", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "tokenIdOrCriteria",
            "type": "uint256"
          },
          { "internalType": "uint128", "name": "amount", "type": "uint128" },
          { "internalType": "uint128", "name": "endAmount", "type": "uint128" },
          {
            "internalType": "uint16",
            "name": "startAmountBps",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "expectedAmountBps",
            "type": "uint16"
          },
          { "internalType": "bytes", "name": "signature", "type": "bytes" }
        ],
        "internalType": "struct MemswapERC721.Intent",
        "name": "intent",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes32[]",
                "name": "criteriaProof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct MemswapERC721.TokenDetails[]",
            "name": "fillTokenDetails",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct MemswapERC721.Solution",
        "name": "solution",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "fillAmountToCheck",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "executeAmountToCheck",
            "type": "uint128"
          },
          {
            "internalType": "uint32",
            "name": "blockDeadline",
            "type": "uint32"
          }
        ],
        "internalType": "struct MemswapERC721.Authorization",
        "name": "auth",
        "type": "tuple"
      },
      { "internalType": "bytes", "name": "authSignature", "type": "bytes" },
      {
        "components": [
          {
            "internalType": "enum PermitExecutor.Kind",
            "name": "kind",
            "type": "uint8"
          },
          { "internalType": "bytes", "name": "data", "type": "bytes" }
        ],
        "internalType": "struct PermitExecutor.Permit[]",
        "name": "permits",
        "type": "tuple[]"
      }
    ],
    "name": "solveWithSignatureAuthorizationCheckERC721",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "newOwner", "type": "address" }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newMemswapERC20",
        "type": "address"
      }
    ],
    "name": "updateMemswapERC20",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newMemswapERC721",
        "type": "address"
      }
    ],
    "name": "updateMemswapERC721",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "stateMutability": "payable", "type": "receive" }
]
